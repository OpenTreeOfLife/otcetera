STEP_1_DIR=step_1
STEP_2_DIR=step_2
STEP_3_DIR=step_3
STEP_4_DIR=step_4
STEP_5_DIR=step_5
STEP_6_DIR=step_6
STEP_7_DIR=step_7
STEP_7_SCRATCH_DIR=step_7_scratch
STEP_8_DIR=step_8
STEP_9_DIR=step_9
SUBPROB_RAW_EXPORT_DIR=$(STEP_7_SCRATCH_DIR)/export-sub-temp
TREE_RANKING_FILE=$(STEP_1_DIR)/tree-ranking.txt
PHYLO_INPUT_FILENAMES=$(shell cat $(TREE_RANKING_FILE))
PHYLO_TREE_NAMES_FILENAMES=$(shell sed -e 's/.tre$$/-tree-names.txt/' $(TREE_RANKING_FILE))
PHYLO_MD5_FILENAMES=$(shell sed -e 's/.tre$$/.md5/' $(TREE_RANKING_FILE))

STEP_4_PHYLO_OUTPUT_PATHS=$(addprefix $(STEP_4_DIR)/, $(PHYLO_INPUT_FILENAMES))
STEP_5_PHYLO_INPUT_PATHS=$(STEP_4_PHYLO_OUTPUT_PATHS)
STEP_5_PHYLO_OUTPUT_PATHS=$(addprefix $(STEP_5_DIR)/, $(PHYLO_INPUT_FILENAMES))
STEP_7_PHYLO_INPUT_PATHS=$(STEP_5_PHYLO_OUTPUT_PATHS)
STEP_7_PHYLO_OUTPUT_TREE_PATHS=$(addprefix $(STEP_7_DIR)/, $(PHYLO_INPUT_FILENAMES))
STEP_7_PHYLO_OUTPUT_TREE_NAME_PATHS=$(addprefix $(STEP_7_DIR)/, $(PHYLO_TREE_NAMES_FILENAMES))
STEP_7_PHYLO_OUTPUT_MD5_PATHS=$(addprefix $(STEP_7_DIR)/, $(PHYLO_MD5_FILENAMES))

# Eventually $(STEP_4_PHYLO_OUTPUT_PATHS) should be added to the artifact list...
ARTIFACTS=$(STEP_5_DIR)/step-5-phylo-args.txt \
	$(STEP_5_DIR)/taxonomy.tre \
	$(STEP_6_DIR)/taxonomy.tre \
	$(STEP_7_DIR)/step-7-phylo-args.txt \
	$(STEP_7_SCRATCH_DIR)/dumped-subproblem-ids.txt \
	$(STEP_7_SCRATCH_DIR)/checksummed-subproblem-ids.txt \
	$(STEP_7_DIR)/subproblem-ids.txt \
	$(STEP_5_PHYLO_OUTPUT_PATHS) \
	$(STEP_7_PHYLO_OUTPUT_TREE_PATHS) \
	$(STEP_7_PHYLO_OUTPUT_TREE_NAME_PATHS) \
	$(STEP_7_PHYLO_OUTPUT_MD5_PATHS) \
	$(SUBPROB_RAW_EXPORT_DIR)/*


# default is "all"
all: $(ARTIFACTS)

clean:
	rm -f $(ARTIFACTS) && rmdir $(SUBPROB_RAW_EXPORT_DIR)

cleanall:
	rm -f $(ARTIFACTS) $(STEP_4_PHYLO_OUTPUT_PATHS) $(STEP_1_DIR)/taxonomy.tre logs/*
	rmdir $(SUBPROB_RAW_EXPORT_DIR) logs

# step-5-phylo-args is a list of the relative filepaths to the phylo inputs for step 5 (higher level tip expansion)
#	relative to the supertree dir.  
# It simplifies the invocation of otc-nonterminals-to-exemplars
$(STEP_5_DIR)/step-5-phylo-args.txt : $(TREE_RANKING_FILE)
	rm -f $(STEP_5_DIR)/step-5-phylo-args.txt
	for f in $(STEP_5_PHYLO_INPUT_PATHS) ; do echo $$f >> $(STEP_5_DIR)/step-5-phylo-args.txt ; done

# otc-nonterminals-to-exemplars expands tips mapped to higher level taxa and produced a pruned tree.
# 	This target is expressed in terms of the taxonomy (which is copied in step 6) because the filenames of the
#	phylo inputs are runtime variables
$(STEP_5_DIR)/taxonomy.tre : $(STEP_5_PHYLO_INPUT_PATHS) $(STEP_1_DIR)/taxonomy.tre $(STEP_5_DIR)/step-5-phylo-args.txt
	for f in $(STEP_5_PHYLO_INPUT_PATHS) ; do cp --no-preserve=mode $$f step_5/ ; done

# currently the pruned taxonomy is produced jointly in step 5 with the tip expansion. 
#	so we just copy it. Logically this is a separate step, so this (kind of silly) cp
#	is retained as a separte step.
$(STEP_6_DIR)/taxonomy.tre : $(STEP_5_DIR)/taxonomy.tre
	otc-prune-taxonomy $(STEP_1_DIR)/taxonomy.tre -f$(STEP_5_DIR)/step-5-phylo-args.txt > $(STEP_6_DIR)/taxonomy.tre


# Step 7 is a bit complex. It can be expensive. So we output to SUBPROB_RAW_EXPORT_DIR, checksum the 
#	results, and copy the changed artifacts to their final. The steps:
#  (A) create the step-7-phylo-args.txt file of the relative paths to the inputs listed in order
#  (B) use run-subproblem-finder.sh to do the decomposition to write all of the subproblems to
#			$(SUBPROB_RAW_EXPORT_DIR) and list of $(STEP_7_SCRATCH_DIR)/dumped-subproblem-ids.txt
#  (C) create checksums for all of the subproblems, and write $(STEP_7_SCRATCH_DIR)/checksummed-subproblem-ids.txt
#			as a successful-completion signal.
#  (D) use move-subproblems-if-differing.py to move changed subproblems to $(STEP_7_DIR) and update the subproblems-ids.txt
#			in that dir to signal completion.
# step-7-phylo-args is a list of the relative filepaths to the phylo inputs for step 7 (higher level tip expansion)
#	relative to the supertree dir.  
# It simplifies the invocation of the decomposition
$(STEP_7_DIR)/step-7-phylo-args.txt : $(STEP_5_DIR)/taxonomy.tre $(TREE_RANKING_FILE)
	rm -f $(STEP_7_DIR)/step-7-phylo-args.txt
	for f in $(STEP_7_PHYLO_INPUT_PATHS) ; do echo $$f >> $(STEP_7_DIR)/step-7-phylo-args.txt ; done

$(STEP_7_SCRATCH_DIR)/dumped-subproblem-ids.txt : $(STEP_7_DIR)/step-7-phylo-args.txt $(STEP_6_DIR)/taxonomy.tre $(STEP_7_PHYLO_INPUT_PATHS)
	bash run-subproblem-finder.sh $(SUBPROB_RAW_EXPORT_DIR) ../dumped-subproblem-ids.txt $(STEP_6_DIR)/taxonomy.tre -r -f$(STEP_7_DIR)/step-7-phylo-args.txt

$(STEP_7_SCRATCH_DIR)/checksummed-subproblem-ids.txt : $(STEP_7_SCRATCH_DIR)/dumped-subproblem-ids.txt
	bash checksum-tree-files.sh $(SUBPROB_RAW_EXPORT_DIR) && cp $(STEP_7_SCRATCH_DIR)/dumped-subproblem-ids.txt $(STEP_7_SCRATCH_DIR)/checksummed-subproblem-ids.txt

$(STEP_7_DIR)/subproblem-ids.txt : $(STEP_7_SCRATCH_DIR)/checksummed-subproblem-ids.txt 
	python move-subproblems-if-differing.py $(STEP_7_SCRATCH_DIR)/checksummed-subproblem-ids.txt $(SUBPROB_RAW_EXPORT_DIR) $(STEP_7_DIR) $(STEP_8_DIR) $(STEP_9_DIR)
